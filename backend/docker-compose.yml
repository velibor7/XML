version: "3.8"

services:
  api_gateway:
    image: api_gateway
    container_name: api_gateway
    build:
      context: .
      dockerfile: ./api_gateway/Dockerfile
    restart: on-failure
    ports:
      - ${GATEWAY_PORT}:${GATEWAY_PORT}
    environment:
      GATEWAY_PORT: ${GATEWAY_PORT}
      AUTHENTICATION_SERVICE_HOST: ${AUTHENTICATION_SERVICE_HOST}
      AUTHENTICATION_SERVICE_PORT: ${AUTHENTICATION_SERVICE_PORT}
      PROFILE_SERVICE_PORT: ${PROFILE_SERVICE_PORT}
      PROFILE_SERVICE_HOST: ${PROFILE_SERVICE_HOST}
    networks:
      - network

  auth_service:
    image: auth_service
    container_name: auth_service
    build:
      context: .
      dockerfile: ./auth_service/Dockerfile
    restart: on-failure
    environment:
      AUTHENTICATION_DB_PORT: ${AUTHENTICATION_DB_PORT}
      AUTHENTICATION_DB_HOST: ${AUTHENTICATION_DB_HOST}
      AUTHENTICATION_SERVICE_PORT: ${AUTHENTICATION_SERVICE_PORT}
      NATS_PORT: ${NATS_PORT}
      NATS_HOST: ${NATS_HOST}
      NATS_USER: ${NATS_USER}
      NATS_PASS: ${NATS_PASS}
    depends_on:
      - auth_db
    networks:
      - network

  profile_service:
    image: profile_service
    container_name: profile_service
    build:
      context: .
      dockerfile: ./profile_service/Dockerfile
    restart: on-failure
    environment:
      PROFILE_DB_PORT: ${PROFILE_DB_PORT}
      PROFILE_DB_HOST: ${PROFILE_DB_HOST}
      PROFILE_SERVICE_PORT: ${PROFILE_SERVICE_PORT}
      NATS_HOST: ${NATS_HOST}
      NATS_PORT: ${NATS_PORT}
      NATS_USER: ${NATS_USER}
      NATS_PASS: ${NATS_PASS}
    depends_on:
      - profile_db
    networks:
      - network

  auth_db:
    image: mongo
    container_name: auth_db
    restart: on-failure
    networks:
      - network

  profile_db:
    image: mongo
    container_name: profile_db
    restart: on-failure
    networks:
      - network

networks:
  network:
    driver: bridge