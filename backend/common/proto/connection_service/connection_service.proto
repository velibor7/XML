syntax="proto3";

package connection_service;
option go_package = "github.com/velibor7/XML/common/proto/connection";


import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";


service ConnectionService{

  rpc GetConnections(GetRequest) returns(Users) {
    option (google.api.http) = {
      get: "/connection/user/{userID}/friends"
    };
  }

  rpc Register(RegisterRequest) returns (ActionResult) {
    option (google.api.http) = {
      post: "/connection/register"
      body:"user"
    };
  }

  rpc AddConnection(AddConnectionRequest) returns (ActionResult) {
    option (google.api.http) = {
      post: "/connection"
      body:"addConnectionDTO"
    };
  }

  rpc RejectConnection(RejectConnectionRequest) returns (ActionResult) {
    option (google.api.http) = {
      put: "/connection/reject"
      body:"rejectConnectionDTO"
    };
  }

  rpc ApproveConnection(ApproveConnectionRequest) returns (ActionResult) {
    option (google.api.http) = {
      put: "/connection/approve"
      body:"approveConnectionDTO"
    };
  }

}

message RegisterRequest{
  User user = 1;
}

message AddConnectionRequest{
  UserAction addConnectionDTO = 1;
}

message ApproveConnectionRequest{
  UserAction approveConnectionDTO = 1;
}

message RejectConnectionRequest{
  UserAction rejectConnectionDTO = 1;
}

message AddBlockUserRequest{
  UserAction addBlockUserDTO = 1;
}




message ActionResult{
  int64 status = 1;
  string msg = 2;
}

message GetRequest {
  string userID = 1;
}

message UserAction{
  string userIDa = 1;
  string userIDb = 2;
}

message User {
  string userID = 1;
  bool isPublic = 2;
}

message Users{
  repeated User users = 1;
}

message UsersID{
  repeated string userID = 1;
}



